(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"AccidentalDemo",(function(){return d})),n.d(t,"default",(function(){return m}));var a=n(2),c=n(6),r=n(0),i=n(84),o=n(95),l={title:"Accidental"},s={unversionedId:"accidental",id:"accidental",isDocsHomePage:!1,title:"Accidental",description:"`js",source:"@site/../packages/symbols/docs/accidental.mdx",slug:"/accidental",permalink:"/music-interface-toolkit/symbols/accidental",editUrl:"https://github.com/NYUMusEdLab/music-interface-toolkit/edit/master/packages/../packages/symbols/docs/accidental.mdx",version:"current",sidebar:"docs",previous:{title:"Pitch",permalink:"/music-interface-toolkit/symbols/pitch"},next:{title:"Chord",permalink:"/music-interface-toolkit/symbols/chord"}},p=[];function d(){var e=Object(r.useState)(0),t=e[0],n=e[1];return Object(i.b)("div",null,Object(i.b)("input",{type:"range",min:-3,max:3,value:t,onChange:function(e){n(parseInt(e.target.value))}}),Object(i.b)("span",{style:{fontSize:"60px"}},"C",Object(i.b)(o.a,{alter:t,mdxType:"Accidental"})))}var u={rightToc:p,AccidentalDemo:d};function m(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { Accidental } from '@musedlab/symbols/pitch';\n")),Object(i.b)("p",null,"The accidental component can be used to render an accidental symbol, from triple\nflat to triple sharp."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React, { useState } from 'react';\nimport { Accidental } from '../src/Accidental';\n\nexport function AccidentalDemo() {\n  const [alt, setAlt] = useState(0);\n  return (\n    <div>\n      <input\n        type=\"range\"\n        min={-3}\n        max={3}\n        value={alt}\n        onChange={(evt) => {\n          setAlt(parseInt(evt.target.value));\n        }}\n      />\n      <span style={{ fontSize: '60px' }}>\n        C <Accidental alter={alt} />\n      </span>\n    </div>\n  );\n}\n")),Object(i.b)(d,{mdxType:"AccidentalDemo"}))}m.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n(2);var a=n(0),c=n.n(a),r=n(82),i=(n(51),n(52)),o=n.n(i),l=new Map([[-3,"\ued66"],[-2,"\ued64"],[-1,"\ued60"],[0,"\ued61"],[1,"\ued62"],[2,"\ued63"],[3,"\ued65"]]);new Map([[-3,"triple flat"],[-2,"double flat"],[-1,"flat"],[0,"natural"],[1,"sharp"],[2,"double sharp"],[3,"triple sharp"]]);function s(e){var t=e.alter,n=e.className;if(!l.has(t))throw new Error("Unsupported accidental: alter="+t);return c.a.createElement("span",{className:Object(r.a)(o.a.accidental,n)},l.get(t))}}}]);